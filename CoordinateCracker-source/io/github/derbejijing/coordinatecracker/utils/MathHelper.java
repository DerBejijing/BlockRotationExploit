package io.github.derbejijing.coordinatecracker.utils;

import java.util.ArrayList;
import java.util.List;
import java.util.Random;

import io.github.derbejijing.coordinatecracker.math.Vector3;

public class MathHelper {

	public static byte getRotationForVector(Vector3 pos) {
		return (byte) (Math.abs((int) getRandomForVector(pos) >> 16) % 4);
	}

	private static long getRandomForVector(Vector3 pos) {
		return getRandomForCoordinates(pos.getX(), pos.getY(), pos.getZ());
	}

	private static long getRandomForCoordinates(int x, int y, int z) {
		long i = (long) (x * 3129871) ^ (long) z * 116129781L ^ (long) y;
		i = i * i * 42317861L + i * 11L;

		return i;
	}

	public static int getRotationForVector_1_16(Vector3 pos) {
		Random r = new Random();
		r.setSeed(getRandomForVector_1_16(pos));
		int rot = Math.abs((int) r.nextLong()) % 4;
		return rot;
	}

	private static long getRandomForVector_1_16(Vector3 pos) {
		return getRandomForCoordinates_1_16(pos.getX(), pos.getY(), pos.getZ());
	}

	private static long getRandomForCoordinates_1_16(int x, int y, int z) {
		long i = (long) (x * 3129871) ^ (long) z * 116129781L ^ (long) y;		
		i = i * i * 42317861L + i * 11L;
		return i >> 16;
	}

	public static List<Integer> flip(int a, int b) {
		List<Integer> result = new ArrayList<>();
		result.add(b);
		result.add(a);

		return result;
	}
	
	public static boolean isInteger(String strIn) {
		try {
			Integer.valueOf(strIn);
			return true;
		} catch(Exception e) {
			return false;
		}
	}

}
