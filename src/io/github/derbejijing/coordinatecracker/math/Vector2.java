package io.github.derbejijing.coordinatecracker.math;

public class Vector2 {

	private int x;
	private int z;
	
	/**
	* Vector2 constructor given x and z values
	*/
	public Vector2(int x, int z) {
		this.x = x;
		this.z = z;
	}
	
	
	/**
	* Vector2 constructor given a Vector2 instance to copy
	* vector2: Vector2 instance to copy
	*/
	public Vector2(Vector2 vector2) {
		this.x = vector2.getX();
		this.z = vector2.getZ();
	}
	
	
	/**
	* Returns x-value
	*/
	public int getX() {
		return this.x;
	}

	
	/**
	* Returns z-value
	*/
	public int getZ() {
		return this.z;
	}
	
	
	/**
	* Returns absolute x-value
	*/
	public int getValueX() {
		return this.x < 0 ? this.x * -1 : this.x;
	}
	
	
	/**
	* Returns absolute z-value
	*/
	public int getValueZ() {
		return this.z < 0 ? this.z * -1 : this.z;
	}
	
	
	/**
	* Sets x to new value
	* x: new value
	*/
	public void setX(int x) {
		this.x = x;
	}

	
	/**
	* Sets z to new value
	* z: new value
	*/
	public void setZ(int z) {
		this.z = z;
	}
	
	
	/**
	* Increments x by given value
	* value: value to increment by
	*/
	public void incrementX(int value) {
		this.x += value;
	}
	
	
	/**
	* Increments z by given value
	* value: value to increment by
	*/
	public void incrementZ(int value) {
		this.z += value;
	}
	
	
	/**
	* Subtracts another Vector2 instance from itself and returns the result as a new Vector2 instance
	*/
	public Vector2 subtract(Vector2 vec2) {
		return new Vector2(this.x - vec2.x, this.z - vec2.z);
	}
	
}
