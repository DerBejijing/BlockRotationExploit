package io.github.derbejijing.coordinatecracker.utils;

import java.util.ArrayList;
import java.util.List;

import io.github.derbejijing.coordinatecracker.math.Vector3;

public class VectorHelper {

	public static List<Vector3> adjustStartEndVectors(Vector3 start, Vector3 end) {
		List<Vector3> result = new ArrayList<>();
		
		if(validStartEndVectors(start, end)) {
			result.add(start);
			result.add(end);
			return result;
		}
		
		int start_x = start.getX();
		int start_y = start.getY();
		int start_z = start.getZ();

		int end_x = end.getX();
		int end_y = end.getY();
		int end_z = end.getZ();
		
		List<Integer> dataStorage = new ArrayList<>();
		
		if(start_x > end_x) {
			dataStorage = MathHelper.flip(start_x, end_x);
			start_x = dataStorage.get(0);
			end_x = dataStorage.get(1);
		}
		
		if(start_y > end_y) {
			dataStorage = MathHelper.flip(start_y, end_y);
			start_y = dataStorage.get(0);
			end_y = dataStorage.get(1);
		}
		
		if(start_z > end_z) {
			dataStorage = MathHelper.flip(start_z, end_z);
			start_z = dataStorage.get(0);
			end_z = dataStorage.get(1);
		}
		
		result.add(new Vector3(start_x, start_y, start_z));
		result.add(new Vector3(end_x, end_y, end_z));
		
		return result;
	}
	
	public static boolean validStartEndVectors(Vector3 start, Vector3 end) {
		if(start.getX() > end.getX()) return false;
		if(start.getY() > end.getY()) return false;
		if(start.getZ() > end.getZ()) return false;
		
		return true;
	}
	
}
